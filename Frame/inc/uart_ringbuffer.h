#ifndef UART_RINGBUFFER_H
#define UART_RINGBUFFER_H

#define BUFFER_SIZE 1024 /* 环形缓冲区的大小 */

typedef struct UartMessage
{
    short mtype;            // 消息类型
    char mbuf[BUFFER_SIZE]; /* 缓冲区空间 */
} UartMessage,*ptUartMessage;
/**********************************************************************
 * 函数名称： InitUartEvent
 * 功能描述： 初始化环形缓冲区
 * 输入参数： ptUartEvent-输入事件
 * 输出参数： 无
 * 返 回 值： 0-成功, 其他值-失败
 * 修改日期          版本号       修改人	      修改内容
 * -----------------------------------------------
 * 2023/12/04	     V1.0	    @尝试早睡         创建
 ***********************************************************************/
extern int InitUartEvent(void);
/**********************************************************************
 * 函数名称： PutUartEvent
 * 功能描述： 往环形缓冲区放入数据
 * 输入参数： ptUartEvent-输入事件
 * 输出参数： 无
 * 返 回 值： 0-成功, 其他值-失败
 * 修改日期          版本号       修改人	      修改内容
 * -----------------------------------------------
 * 2023/12/04	     V1.0	    @尝试早睡         创建
 ***********************************************************************/
extern int PutUartEvent(ptUartMessage ptUartEvent);
/**********************************************************************
 * 函数名称： GetUartEvent
 * 功能描述： 从环形缓冲区读取数据
 * 输入参数： 无
 * 输出参数： ptUartEvent-用来保存输入事件
 * 返 回 值： 0-成功, 其他值-失败
 * 修改日期          版本号        修改人	      修改内容
 * -----------------------------------------------
 * 2023/12/04	     V1.0	    @尝试早睡         创建
 ***********************************************************************/
extern int GetUartEvent( ptUartMessage ptUartEvent);

#endif /* UART_RINGBUFFER_H */